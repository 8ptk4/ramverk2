{"ast":null,"code":"import _defineProperty from \"/home/patrik/School/ramverk2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/patrik/School/ramverk2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useFormValidation = (initialState, validate) => {\n  const _useState = useState(initialState),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errors = _useState4[0],\n        setErrors = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isSubmitting = _useState6[0],\n        setSubmitting = _useState6[1];\n\n  useEffect(() => {\n    if (isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n\n      if (noErrors) {\n        console.log(\"authenticated\");\n        const newUser = {\n          username: \"\".concat(values.name),\n          email: \"\".concat(values.email),\n          personalNumber: \"\".concat(values.year, \"/\").concat(values.month, \"/\").concat(values.day),\n          password: \"\".concat(values.password)\n        };\n        axios({\n          method: 'post',\n          url: \"\".concat(process.env.REACT_APP_BACKEND_URL, \"/register/\"),\n          data: newUser\n        }).then(response => {\n          console.log(response);\n        }, error => {\n          console.log(error);\n        });\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  }, [errors, isSubmitting, values]);\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleBlur = () => {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  };\n\n  return {\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    values,\n    errors,\n    isSubmitting\n  };\n};\n\nexport default useFormValidation;","map":{"version":3,"sources":["/home/patrik/School/ramverk2/src/components/views/FormValidation.js"],"names":["useState","useEffect","axios","useFormValidation","initialState","validate","values","setValues","errors","setErrors","isSubmitting","setSubmitting","noErrors","Object","keys","length","console","log","newUser","username","name","email","personalNumber","year","month","day","password","method","url","process","env","REACT_APP_BACKEND_URL","data","then","response","error","handleChange","event","target","value","handleBlur","validationErrors","handleSubmit","preventDefault"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,YAAD,EAAeC,QAAf,KAA4B;AAAA,oBACtBL,QAAQ,CAACI,YAAD,CADc;AAAA;AAAA,QAC3CE,MAD2C;AAAA,QACnCC,SADmC;;AAAA,qBAEtBP,QAAQ,CAAC,EAAD,CAFc;AAAA;AAAA,QAE3CQ,MAF2C;AAAA,QAEnCC,SAFmC;;AAAA,qBAGZT,QAAQ,CAAC,KAAD,CAHI;AAAA;AAAA,QAG3CU,YAH2C;AAAA,QAG7BC,aAH6B;;AAKlDV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,YAAJ,EAAkB;AACd,YAAME,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,MAApB,KAA+B,CAAhD;;AAEA,UAAIH,QAAJ,EAAc;AACVI,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,cAAMC,OAAO,GAAG;AACZC,UAAAA,QAAQ,YAAKb,MAAM,CAACc,IAAZ,CADI;AAEZC,UAAAA,KAAK,YAAKf,MAAM,CAACe,KAAZ,CAFO;AAGZC,UAAAA,cAAc,YAAKhB,MAAM,CAACiB,IAAZ,cAAoBjB,MAAM,CAACkB,KAA3B,cAAoClB,MAAM,CAACmB,GAA3C,CAHF;AAIZC,UAAAA,QAAQ,YAAKpB,MAAM,CAACoB,QAAZ;AAJI,SAAhB;AAOAxB,QAAAA,KAAK,CAAC;AACFyB,UAAAA,MAAM,EAAE,MADN;AAEFC,UAAAA,GAAG,YAAKC,OAAO,CAACC,GAAR,CAAYC,qBAAjB,eAFD;AAGFC,UAAAA,IAAI,EAAEd;AAHJ,SAAD,CAAL,CAKKe,IALL,CAKWC,QAAD,IAAc;AAChBlB,UAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;AACH,SAPL,EAOQC,KAAD,IAAW;AACVnB,UAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACH,SATL;AAWAxB,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH,OArBD,MAqBO;AACHA,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ;AACJ,GA7BQ,EA6BN,CAACH,MAAD,EAASE,YAAT,EAAuBJ,MAAvB,CA7BM,CAAT;;AA+BA,QAAM8B,YAAY,GAAIC,KAAD,IAAW;AAC5B9B,IAAAA,SAAS,mBACFD,MADE;AAEL,OAAC+B,KAAK,CAACC,MAAN,CAAalB,IAAd,GAAqBiB,KAAK,CAACC,MAAN,CAAaC;AAF7B,OAAT;AAIH,GALD;;AAOA,QAAMC,UAAU,GAAG,MAAM;AACrB,UAAMC,gBAAgB,GAAGpC,QAAQ,CAACC,MAAD,CAAjC;AACAG,IAAAA,SAAS,CAACgC,gBAAD,CAAT;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAIL,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACM,cAAN;AACA,UAAMF,gBAAgB,GAAGpC,QAAQ,CAACC,MAAD,CAAjC;AACAG,IAAAA,SAAS,CAACgC,gBAAD,CAAT;AACA9B,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GALD;;AAQA,SAAO;AAAE+B,IAAAA,YAAF;AAAgBN,IAAAA,YAAhB;AAA8BI,IAAAA,UAA9B;AAA0ClC,IAAAA,MAA1C;AAAkDE,IAAAA,MAAlD;AAA0DE,IAAAA;AAA1D,GAAP;AACH,CAzDD;;AA2DA,eAAeP,iBAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useFormValidation = (initialState, validate) => {\n    const [values, setValues] = useState(initialState);\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setSubmitting] = useState(false);\n\n    useEffect(() => {\n        if (isSubmitting) {\n            const noErrors = Object.keys(errors).length === 0;\n\n            if (noErrors) {\n                console.log(\"authenticated\")\n                const newUser = {\n                    username: `${values.name}`,\n                    email: `${values.email}`,\n                    personalNumber: `${values.year}/${values.month}/${values.day}`,\n                    password: `${values.password}`\n                }\n\n                axios({\n                    method: 'post',\n                    url: `${process.env.REACT_APP_BACKEND_URL}/register/`,\n                    data: newUser\n                })\n                    .then((response) => {\n                        console.log(response);\n                    }, (error) => {\n                        console.log(error);\n                    });\n                    \n                setSubmitting(false);\n            } else {\n                setSubmitting(false);\n            }\n        }\n    }, [errors, isSubmitting, values]);\n\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleBlur = () => {\n        const validationErrors = validate(values);\n        setErrors(validationErrors);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const validationErrors = validate(values);\n        setErrors(validationErrors);\n        setSubmitting(true);\n    };\n\n\n    return { handleSubmit, handleChange, handleBlur, values, errors, isSubmitting };\n}\n\nexport default useFormValidation;"]},"metadata":{},"sourceType":"module"}