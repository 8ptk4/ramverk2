{"ast":null,"code":"import _slicedToArray from \"/home/patrik/School/ramverk2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/patrik/School/ramverk2/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/patrik/School/ramverk2/src/components/views/Register.js\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    button {\\n        margin-top: 30px;\\n    }\\n\\n    label {\\n        color: black;\\n        font-weight: bold;\\n    }\\n\\n    .secondary_label {\\n        float: right;\\n        color: black;\\n    }\\n\\n    .arrow {       \\n        svg {\\n            margin: 0 auto;\\n        }\\n    }\\n\\n    .arrow:hover {\\n        cursor: pointer;\\n\\n        svg {\\n            color: #E85A50 !important;\\n        }\\n    }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-between;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-between;\\n    -webkit-touch-callout: none;\\n    -webkit-user-select: none;\\n    -khtml-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    user-select: none; \\n\\n    .active {\\n        outline: 2px solid #E85A50\\n        box-shadow: 0 0 10px #E85A50;\\n        background: #E85A50;\\n        color: white;\\n        font-size: 1.2em;\\n    }\\n\\n    span {\\n        display: flex;\\n        width: 25%;\\n        margin: 10px;\\n        padding: 10px;\\n        justify-content: center;\\n        flex-direction: column;\\n        text-align: center;\\n    }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    color: red;\\n\\n    .error-text {\\n        color: red;\\n        margin: 0;\\n        padding: 0;\\n        position: absolute;\\n    }\\n\\n    .error {\\n        color: red;\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport useFormValidation from './FormValidation';\nimport validateAuth from './ValidateAuth';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport useLongPress from './testtest';\nimport DocumentTitle from 'react-document-title';\nconst Section = styled.section(_templateObject());\nconst DateYear = styled.div(_templateObject2());\nconst DatePicker = styled.div(_templateObject3());\nconst FormStyle = styled.form(_templateObject4());\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  year: \"\",\n  month: \"\",\n  day: \"\"\n};\n\nconst Register = ({\n  updateTitle\n}) => {\n  React.useEffect(() => {\n    updateTitle('Register');\n  }, [updateTitle]);\n  /**\n   * Get todays month number.\n   * \n   * @return {number} month number.\n   */\n\n  const getMonth = () => {\n    const month = newDate.getMonth();\n    return parseInt(month) + 1;\n  };\n  /**\n   * Get todays day number.\n   * \n   * @return {number} day number.\n   */\n\n\n  const getDay = () => {\n    const day = newDate.getDate();\n    return parseInt(day);\n  };\n\n  const newDate = new Date();\n\n  const _useFormValidation = useFormValidation(INITIAL_STATE, validateAuth),\n        handleSubmit = _useFormValidation.handleSubmit,\n        handleChange = _useFormValidation.handleChange,\n        handleBlur = _useFormValidation.handleBlur,\n        values = _useFormValidation.values,\n        errors = _useFormValidation.errors,\n        isSubmitting = _useFormValidation.isSubmitting;\n\n  const _useState = useState(2019),\n        _useState2 = _slicedToArray(_useState, 2),\n        year = _useState2[0],\n        setYear = _useState2[1];\n\n  const _useState3 = useState(getMonth()),\n        _useState4 = _slicedToArray(_useState3, 2),\n        month = _useState4[0],\n        setMonth = _useState4[1];\n\n  const _useState5 = useState(getDay()),\n        _useState6 = _slicedToArray(_useState5, 2),\n        day = _useState6[0],\n        setDay = _useState6[1];\n  /**\n   * Get how many days there are in a specified month.\n   * \n   * @param {number} currentMonth \n   * @param {number} currentYear \n   * @return {number} amount of days.\n   */\n\n\n  const getDaysOfMonth = (currentMonth, currentYear) => {\n    const amountOfDays = new Date(currentYear, currentMonth, 0).getDate();\n    return amountOfDays;\n  };\n  /**\n   * \n   * \n   * @param {*} current\n   * @return {}\n   */\n\n\n  const turnMonth = current => {\n    if (current < 1) {\n      setMonth(12);\n    } else if (current > 12) {\n      setMonth(1);\n    } else {\n      setMonth(current);\n    }\n\n    ;\n    return current;\n  };\n  /**\n   * Convert the current month number into its name.\n   * \n   * @param {number} monthNr Number of the current month.\n   * @return {string} Current month name.\n   */\n\n\n  const getMonthName = monthNr => {\n    const monthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    return monthArray[monthNr - 1];\n  };\n  /**\n   * \n   * \n   * @param {*} current \n   * @param {*} total \n   * @return {} \n   */\n\n\n  const turnDay = (current, total) => {\n    total = getDaysOfMonth(month, year);\n\n    if (current < 1) {\n      setDay(total);\n    } else if (current > total) {\n      setDay(1);\n    } else {\n      setDay(current);\n    }\n\n    ;\n    return current;\n  };\n  /**\n   * \n   * @param {*} extraDay \n   */\n\n\n  const calculateNextMonth = (extraDay = 0) => {\n    switch (month + extraDay) {\n      case 11 + extraDay:\n        return 12;\n\n      case 12 + extraDay:\n        return 1 + extraDay;\n\n      default:\n        return month + 1 + extraDay;\n    }\n\n    ;\n  };\n  /**\n   * \n   * @param {*} extraDay \n   */\n\n\n  const calculatePreviousMonth = (extraDay = 0) => {\n    switch (month - extraDay) {\n      case 2 - extraDay:\n        return 1;\n\n      case 1 - extraDay:\n        return 12 - extraDay;\n\n      default:\n        return month - 1 - extraDay;\n    }\n  };\n  /**\n   * \n   * @param {*} extraDay \n   */\n\n\n  const calculateNextDay = (extraDay = 0) => {\n    const total = getDaysOfMonth(month, year);\n\n    switch (day + extraDay) {\n      case total - 1 + extraDay:\n        return total;\n\n      case total + extraDay:\n        return 1 + extraDay;\n\n      default:\n        return day + 1;\n    }\n  };\n  /**\n   * \n   * @param {*} extraDay \n   */\n\n\n  const calculatePreviousDay = (extraDay = 0) => {\n    const total = getDaysOfMonth(month, year);\n\n    switch (day - extraDay) {\n      case 2 - extraDay:\n        return 1;\n\n      case 1 - extraDay:\n        return total - extraDay;\n\n      default:\n        return day - 1;\n    }\n  };\n  /**\n   * \n   * @param {*} value \n   * @param {*} callback \n   */\n\n\n  const handleLongPress = (value = 1, callback = setYear) => () => {\n    callback(prevState => prevState + value);\n  };\n\n  values.year = year;\n  values.month = month;\n  values.day = day;\n  const longPressHandlersPlus = useLongPress(handleLongPress(1));\n  const longPressHandlersMinus = useLongPress(handleLongPress(-1));\n  const longPressHandlersPlusDay = useLongPress(handleLongPress(1, setDay));\n  const longPressHandlersMinusDay = useLongPress(handleLongPress(-1, setDay));\n  return React.createElement(React.Fragment, null, React.createElement(Section, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(FormStyle, {\n    className: \"row\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, \"Choose a Name\"), React.createElement(Form.Control, {\n    onChange: handleChange,\n    value: values.name,\n    name: \"name\",\n    onBlur: handleBlur,\n    className: errors.name && 'error-input',\n    type: \"text\",\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }), errors.name && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, errors.name), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(Form.Control, {\n    onChange: handleChange,\n    name: \"email\",\n    type: \"email\",\n    onBlur: handleBlur,\n    value: values.email,\n    className: errors.email && 'error-input',\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }), errors.email && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, errors.email), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, \"Choose a Password\"), React.createElement(\"span\", {\n    className: \"secondary_label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, \"Min. 6 characters\"), React.createElement(Form.Control, {\n    onChange: handleChange,\n    name: \"password\",\n    type: \"password\",\n    onBlur: handleBlur,\n    className: errors.password && 'error-input',\n    value: values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }), errors.password && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, errors.password), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  })), React.createElement(DatePicker, {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, \"Date of Birth\"), React.createElement(DateYear, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, React.createElement(\"span\", Object.assign({\n    className: \"arrow\",\n    onClick: () => setYear(year - 1)\n  }, longPressHandlersMinus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }), React.createElement(FontAwesomeIcon, {\n    id: \"leftArrow\",\n    size: \"2x\",\n    icon: faChevronLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, year - 1), React.createElement(\"span\", {\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, year), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, year + 1), React.createElement(\"span\", Object.assign({\n    className: \"arrow\",\n    onClick: () => setYear(year + 1)\n  }, longPressHandlersPlus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }), React.createElement(FontAwesomeIcon, {\n    size: \"2x\",\n    icon: faChevronRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }))), errors.year && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, errors.year), React.createElement(DateYear, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"arrow\",\n    onClick: () => turnMonth(month - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    size: \"2x\",\n    icon: faChevronLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, getMonthName(calculatePreviousMonth())), React.createElement(\"span\", {\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }, getMonthName(month)), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, getMonthName(calculateNextMonth())), React.createElement(\"span\", {\n    className: \"arrow\",\n    onClick: () => turnMonth(month + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    size: \"2x\",\n    icon: faChevronRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }))), React.createElement(DateYear, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, React.createElement(\"span\", Object.assign({\n    className: \"arrow\",\n    onClick: () => turnDay(day - 1)\n  }, longPressHandlersMinusDay, {\n    value: values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }), React.createElement(FontAwesomeIcon, {\n    size: \"2x\",\n    icon: faChevronLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, calculatePreviousDay()), React.createElement(\"span\", {\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, day), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, calculateNextDay()), React.createElement(\"span\", Object.assign({\n    className: \"arrow\",\n    onClick: () => turnDay(day + 1)\n  }, longPressHandlersPlusDay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }), React.createElement(FontAwesomeIcon, {\n    size: \"2x\",\n    icon: faChevronRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  })))), React.createElement(Button, {\n    id: \"button\",\n    variant: \"primary\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }, \"Submit\")))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/patrik/School/ramverk2/src/components/views/Register.js"],"names":["React","useState","styled","Button","Form","useFormValidation","validateAuth","FontAwesomeIcon","faChevronLeft","faChevronRight","useLongPress","DocumentTitle","Section","section","DateYear","div","DatePicker","FormStyle","form","INITIAL_STATE","name","email","password","year","month","day","Register","updateTitle","useEffect","getMonth","newDate","parseInt","getDay","getDate","Date","handleSubmit","handleChange","handleBlur","values","errors","isSubmitting","setYear","setMonth","setDay","getDaysOfMonth","currentMonth","currentYear","amountOfDays","turnMonth","current","getMonthName","monthNr","monthArray","turnDay","total","calculateNextMonth","extraDay","calculatePreviousMonth","calculateNextDay","calculatePreviousDay","handleLongPress","value","callback","prevState","longPressHandlersPlus","longPressHandlersMinus","longPressHandlersPlusDay","longPressHandlersMinusDay"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport useFormValidation from './FormValidation';\nimport validateAuth from './ValidateAuth';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport useLongPress from './testtest';\nimport DocumentTitle from 'react-document-title';\n\nconst Section = styled.section`\n    color: red;\n\n    .error-text {\n        color: red;\n        margin: 0;\n        padding: 0;\n        position: absolute;\n    }\n\n    .error {\n        color: red;\n        margin: 0;\n        padding: 0;\n        text-align: center;\n    }\n`;\n\nconst DateYear = styled.div`\n    display: flex;\n    justify-content: space-between;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none; \n\n    .active {\n        outline: 2px solid #E85A50\n        box-shadow: 0 0 10px #E85A50;\n        background: #E85A50;\n        color: white;\n        font-size: 1.2em;\n    }\n\n    span {\n        display: flex;\n        width: 25%;\n        margin: 10px;\n        padding: 10px;\n        justify-content: center;\n        flex-direction: column;\n        text-align: center;\n    }\n`;\n\nconst DatePicker = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`;\n\nconst FormStyle = styled.form`\n    button {\n        margin-top: 30px;\n    }\n\n    label {\n        color: black;\n        font-weight: bold;\n    }\n\n    .secondary_label {\n        float: right;\n        color: black;\n    }\n\n    .arrow {       \n        svg {\n            margin: 0 auto;\n        }\n    }\n\n    .arrow:hover {\n        cursor: pointer;\n\n        svg {\n            color: #E85A50 !important;\n        }\n    }\n`;\n\n\nconst INITIAL_STATE = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    year: \"\",\n    month: \"\",\n    day: \"\",\n};\n\n\nconst Register = ({updateTitle}) => {\n    React.useEffect(() => {\n        updateTitle('Register');\n    }, [updateTitle]);\n\n\n    /**\n     * Get todays month number.\n     * \n     * @return {number} month number.\n     */\n    const getMonth = () => {\n        const month = newDate.getMonth();\n\n        return parseInt(month) + 1;\n    };\n\n\n    /**\n     * Get todays day number.\n     * \n     * @return {number} day number.\n     */\n    const getDay = () => {\n        const day = newDate.getDate();\n\n        return parseInt(day);\n    };\n\n    const newDate = new Date();\n\n    const { handleSubmit, handleChange, handleBlur, values, errors, isSubmitting } = useFormValidation(INITIAL_STATE, validateAuth);\n    const [year, setYear] = useState(2019);\n    const [month, setMonth] = useState(getMonth());\n    const [day, setDay] = useState(getDay());\n    \n\n    /**\n     * Get how many days there are in a specified month.\n     * \n     * @param {number} currentMonth \n     * @param {number} currentYear \n     * @return {number} amount of days.\n     */\n    const getDaysOfMonth = (currentMonth, currentYear) => {\n        const amountOfDays = new Date(currentYear, currentMonth, 0).getDate();\n\n        return amountOfDays;\n    };\n\n\n    /**\n     * \n     * \n     * @param {*} current\n     * @return {}\n     */\n    const turnMonth = (current) => {\n        if (current < 1) {\n            setMonth(12);\n        } else if (current > 12) {\n            setMonth(1);\n        } else {\n            setMonth(current);\n        };\n\n        return (current);\n    };\n\n    \n    /**\n     * Convert the current month number into its name.\n     * \n     * @param {number} monthNr Number of the current month.\n     * @return {string} Current month name.\n     */\n    const getMonthName = (monthNr) => {\n        const monthArray = [\n            'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n        ];\n\n        return monthArray[monthNr - 1];\n    }\n\n    \n    /**\n     * \n     * \n     * @param {*} current \n     * @param {*} total \n     * @return {} \n     */\n    const turnDay = (current, total) => {\n        total = getDaysOfMonth(month, year);\n        if (current < 1) {\n            setDay(total);\n        } else if (current > total) {\n            setDay(1);\n        } else {\n            setDay(current);\n        };\n        return (current);\n    };\n\n\n    /**\n     * \n     * @param {*} extraDay \n     */\n    const calculateNextMonth = (extraDay = 0) => {\n        switch (month + extraDay) {\n            case 11 + extraDay:\n                return 12;\n            case 12 + extraDay:\n                return 1 + extraDay;\n            default:\n                return (month + 1 + extraDay);\n        };\n    };\n\n\n    /**\n     * \n     * @param {*} extraDay \n     */\n    const calculatePreviousMonth = (extraDay = 0) => {\n        switch (month - extraDay) {\n            case 2 - extraDay:\n                return 1;\n            case 1 - extraDay:\n                return 12 - extraDay;\n            default:\n                return (month - 1 - extraDay);\n        }\n    };\n\n    \n    /**\n     * \n     * @param {*} extraDay \n     */\n    const calculateNextDay = (extraDay = 0) => {\n        const total = getDaysOfMonth(month, year);\n\n        switch (day + extraDay) {\n            case total - 1 + extraDay:\n                return total;\n            case total + extraDay:\n                return 1 + extraDay;\n            default:\n                return (day + 1);\n        }\n    };\n\n\n    /**\n     * \n     * @param {*} extraDay \n     */\n    const calculatePreviousDay = (extraDay = 0) => {\n        const total = getDaysOfMonth(month, year);\n\n        switch (day - extraDay) {\n            case 2 - extraDay:\n                return 1;\n            case 1 - extraDay:\n                return total - extraDay;\n            default:\n                return (day - 1);\n        }\n    };\n\n\n    /**\n     * \n     * @param {*} value \n     * @param {*} callback \n     */\n    const handleLongPress = (value = 1, callback = setYear) => () => {\n        callback(prevState => prevState + value);\n    };\n\n    values.year = year\n    values.month = month\n    values.day = day\n\n    const longPressHandlersPlus = useLongPress(handleLongPress(1));\n    const longPressHandlersMinus = useLongPress(handleLongPress(-1));\n    const longPressHandlersPlusDay = useLongPress(handleLongPress(1, setDay));\n    const longPressHandlersMinusDay = useLongPress(handleLongPress(-1, setDay));\n\n    return (\n        <>\n            <Section>\n                <div className=\"container\">\n                    <FormStyle className=\"row\" onSubmit={handleSubmit}>\n                        <div className=\"col-sm\">\n                            <label>Choose a Name</label>\n                            <Form.Control \n                                onChange={handleChange}\n                                value={values.name}\n                                name=\"name\"\n                                onBlur={handleBlur}\n                                className={errors.name && 'error-input'}\n                                type=\"text\" \n                                autoComplete=\"off\"\n                            />\n                            {errors.name && <p className=\"error-text\">{errors.name}</p>} \n                            <br />\n                            <label>Email Address</label>\n                            <Form.Control \n                                onChange={handleChange}\n                                name=\"email\" \n                                type=\"email\"\n                                onBlur={handleBlur}\n                                value={values.email}\n                                className={errors.email && 'error-input'}\n                                autoComplete=\"off\"\n                            />\n                            {errors.email && <p className=\"error-text\">{errors.email}</p>}\n                            <br />\n                            <label>Choose a Password</label><span className=\"secondary_label\">Min. 6 characters</span>\n                            <Form.Control\n                                onChange={handleChange}\n                                name=\"password\" \n                                type=\"password\"\n                                onBlur={handleBlur}\n                                className={errors.password && 'error-input'}\n                                value={values.password}\n                            />\n                            {errors.password && <p className=\"error-text\">{errors.password}</p>}\n                            <br />                     \n                        </div>\n                        <DatePicker className=\"col-sm\">\n                            <label>Date of Birth</label>\n                            <DateYear>\n                                <span className=\"arrow\" \n                                    onClick={() => setYear(year - 1)}\n                                    {...longPressHandlersMinus}>  \n                                    <FontAwesomeIcon  \n                                        id=\"leftArrow\"\n                                        size=\"2x\"\n                                        icon={faChevronLeft}\n                                    />\n                                </span>\n                                <span>{(year - 1)}</span>\n                                <span className=\"active\">{year}</span>\n                                <span>{year + 1}</span>\n                                <span className=\"arrow\"\n                                    onClick={() => setYear(year + 1)} \n                                    {...longPressHandlersPlus}>\n                                    <FontAwesomeIcon\n                                        size=\"2x\"\n                                        icon={faChevronRight}\n                                    />\n                                </span>\n                            </DateYear>\n                            {errors.year && <span className=\"error\">{errors.year}</span>}\n                            <DateYear>\n                                <span className=\"arrow\" onClick={() => turnMonth(month - 1)}>\n                                    <FontAwesomeIcon\n                                        size=\"2x\"\n                                        icon={faChevronLeft}\n                                    />\n                                </span>\n\n                                <span>{getMonthName(calculatePreviousMonth())}</span>\n                                <span className=\"active\">{getMonthName(month)}</span>\n                                <span>{getMonthName(calculateNextMonth())}</span>\n   \n                                <span className=\"arrow\" onClick={() => turnMonth(month + 1)}>\n                                    <FontAwesomeIcon \n                                        size=\"2x\"\n                                        icon={faChevronRight}\n                                    />\n                                </span>\n                            </DateYear>\n                            <DateYear>\n                                <span className=\"arrow\"\n                                    onClick={() => turnDay(day - 1)}\n                                    {...longPressHandlersMinusDay}\n                                    value={values.email}>\n                                    <FontAwesomeIcon\n                                        size=\"2x\"\n                                        icon={faChevronLeft}\n                                    />\n                                </span>\n                                <span>{calculatePreviousDay()}</span>\n                                <span className=\"active\">{day}</span>\n                                <span>{calculateNextDay()}</span>\n                                <span className=\"arrow\"\n                                    onClick={() => turnDay(day + 1)}\n                                    {...longPressHandlersPlusDay}>\n                                    <FontAwesomeIcon \n                                        size=\"2x\"\n                                        icon={faChevronRight}\n                                    />\n                                </span>\n                            </DateYear>\n                        </DatePicker>\n                        \n                        <Button \n                            id=\"button\"\n                            variant=\"primary\" \n                            type=\"submit\"\n                            disabled={isSubmitting}\n                            block>Submit\n                        </Button>\n                    </FormStyle> \n                </div>\n            </Section>\n        </>\n    );\n};\n\n\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}