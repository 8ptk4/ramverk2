{"ast":null,"code":"import _slicedToArray from \"/home/patrik/School/ramverk2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/patrik/School/ramverk2/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/patrik/School/ramverk2/src/components/views/report/EditReport.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    textarea {\\n        width: 100%;\\n        padding: 10px;\\n        box-sizing: border-box;\\n        resize: none;\\n        border: 1px solid grey;\\n        margin-bottom: 10px;\\n        border-radius: 5px;\\n    }\\n\\n    textarea:focus {\\n        border-radius: 5px !important;\\n        outline: none;\\n        border: 1px solid #2999A3 !important;\\n    }\\n\\n    ul {\\n        list-style-type: none;\\n        padding: 0;\\n    }\\n\\n    .report_list {\\n        border-right: 1px solid #C8C8C8;\\n    }\\n\\n    .form_field {\\n        border: 1px solid grey;\\n        outline-offset: none !important;\\n        margin-bottom: 10px;\\n    }\\n\\n    .form_field:focus {\\n        box-shadow: none !important;\\n        border: 1px solid #2999A3;\\n    }\\n\\n    .btn {\\n        width: 50%;\\n        background-color: rgb(41, 153, 163);\\n        color: white;\\n        border: none;\\n    }\\n\\n    button:hover {\\n        background-color: rgb(41, 153, 163, 0.8);\\n    }\\n\\n    h6 {\\n        color: #E85A50;\\n        font-weight: bold;\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport TextareaAutosize from 'react-autosize-textarea';\nimport { Row, Col, Form } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport ListReports from './ListReports';\nimport axios from 'axios';\nconst Section = styled.section(_templateObject());\n\nconst EditReport = props => {\n  useEffect(() => {\n    props.updateTitle('Edit report');\n    fetchItems();\n  }, [props, props.match.params.title]);\n  const INITIAL_VALUES = {\n    title: \"\",\n    content: \"\"\n  };\n\n  const _useState = useState(\"  \"),\n        _useState2 = _slicedToArray(_useState, 2),\n        Content = _useState2[0],\n        setContent = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Title = _useState4[0],\n        setTitle = _useState4[1];\n\n  const fetchItems = () => {\n    const reportTitle = props.match.params.title;\n    axios.get(\"\".concat(process.env.REACT_APP_BACKEND_URL, \"/reports/week/\").concat(reportTitle), {}).then(response => {\n      const items = response.data;\n      const reportContent = items.about;\n      setTitle(reportTitle);\n      setContent(reportContent);\n    }).catch(e => console.log('Problem fetching data', e));\n  };\n\n  const handleContentChange = e => {\n    INITIAL_VALUES.content = e.target.value;\n  };\n\n  const handleTitleChange = e => {\n    INITIAL_VALUES.title = e.target.value;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(\"\".concat(process.env.REACT_APP_BACKEND_URL, \"/reports/\"), {\n      title: INITIAL_VALUES.title === \"\" ? Title : INITIAL_VALUES.title,\n      content: INITIAL_VALUES.content === \"\" ? Content : INITIAL_VALUES.content\n    }, {\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    }).then(res => {\n      props.history.push(\"/reports/week/\".concat(Title));\n    }).catch(e => console.log(e.response));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Section, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Col, {\n    className: \"report_list\",\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(ListReports, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), React.createElement(Col, {\n    md: {\n      span: 8,\n      offset: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Edit report\"), React.createElement(\"form\", {\n    className: \"row\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Title\"), React.createElement(Form.Control, {\n    className: \"form_field\",\n    defaultValue: Title,\n    onChange: handleTitleChange,\n    name: \"name\",\n    type: \"text\",\n    disabled: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Content\"), React.createElement(TextareaAutosize, {\n    key: \"\".concat(Math.floor(Math.random() * 1000), \"-min\"),\n    onChange: handleContentChange,\n    defaultValue: Content,\n    name: \"textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"btn\",\n    variant: \"primary\",\n    type: \"submit\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Save\"))))));\n};\n\nexport default EditReport;","map":{"version":3,"sources":["/home/patrik/School/ramverk2/src/components/views/report/EditReport.js"],"names":["React","useState","useEffect","styled","TextareaAutosize","Row","Col","Form","Button","ListReports","axios","Section","section","EditReport","props","updateTitle","fetchItems","match","params","title","INITIAL_VALUES","content","Content","setContent","Title","setTitle","reportTitle","get","process","env","REACT_APP_BACKEND_URL","then","response","items","data","reportContent","about","catch","e","console","log","handleContentChange","target","value","handleTitleChange","handleSubmit","preventDefault","post","headers","localStorage","getItem","res","history","push","span","offset","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport TextareaAutosize from 'react-autosize-textarea';\nimport { Row, Col, Form } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport ListReports from './ListReports';\nimport axios from 'axios';\n\nconst Section = styled.section`\n    textarea {\n        width: 100%;\n        padding: 10px;\n        box-sizing: border-box;\n        resize: none;\n        border: 1px solid grey;\n        margin-bottom: 10px;\n        border-radius: 5px;\n    }\n\n    textarea:focus {\n        border-radius: 5px !important;\n        outline: none;\n        border: 1px solid #2999A3 !important;\n    }\n\n    ul {\n        list-style-type: none;\n        padding: 0;\n    }\n\n    .report_list {\n        border-right: 1px solid #C8C8C8;\n    }\n\n    .form_field {\n        border: 1px solid grey;\n        outline-offset: none !important;\n        margin-bottom: 10px;\n    }\n\n    .form_field:focus {\n        box-shadow: none !important;\n        border: 1px solid #2999A3;\n    }\n\n    .btn {\n        width: 50%;\n        background-color: rgb(41, 153, 163);\n        color: white;\n        border: none;\n    }\n\n    button:hover {\n        background-color: rgb(41, 153, 163, 0.8);\n    }\n\n    h6 {\n        color: #E85A50;\n        font-weight: bold;\n    }\n`;\n\n\n\nconst EditReport = (props) => {\n    useEffect(() => {\n        props.updateTitle('Edit report');\n        fetchItems();\n    }, [props, props.match.params.title]);\n\n    const INITIAL_VALUES = {\n        title: \"\",\n        content: \"\",\n    };\n\n    const [Content, setContent] = useState(\"  \");\n    const [Title, setTitle] = useState(\"\");\n    \n    const fetchItems = () => {\n        const reportTitle = props.match.params.title;\n        axios.get(`${process.env.REACT_APP_BACKEND_URL}/reports/week/${reportTitle}`, {}).then((response) => {\n        const items = response.data;\n        const reportContent = items.about;\n\n        setTitle(reportTitle);\n        setContent(reportContent);\n        }).catch (e => console.log('Problem fetching data', e));\n    };\n\n    const handleContentChange = (e) => {\n        INITIAL_VALUES.content = e.target.value;\n    }; \n    \n    const handleTitleChange = (e) => {\n        INITIAL_VALUES.title = e.target.value;\n    };\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n  \n        axios.post(`${process.env.REACT_APP_BACKEND_URL}/reports/`, \n        { \n            title: INITIAL_VALUES.title === \"\" ? Title : INITIAL_VALUES.title,\n            content: INITIAL_VALUES.content === \"\" ? Content : INITIAL_VALUES.content \n        }, {\n            headers: { \n                'x-access-token': localStorage.getItem('token') \n            }\n        })\n            .then(res => {\n                props.history.push(`/reports/week/${Title}`);\n            })\n            .catch(e => console.log(e.response));\n    };\n\n    return (\n        <>\n            <Section>\n                <Row>\n                    <Col className=\"report_list\" md={3}>\n                        <ListReports />\n                    </Col>\n                    <Col md={{ span: 8, offset: 1 }}>\n                        <h3>Edit report</h3>\n                        <form className=\"row\" onSubmit={handleSubmit}>\n                            <label>Title</label>\n                            <Form.Control\n                                className=\"form_field\"\n                                defaultValue={Title}\n                                onChange={handleTitleChange}\n                                name=\"name\"\n                                type=\"text\"\n                                disabled\n                                autoComplete=\"off\"\n                            />\n                            <label>Content</label>\n                            <TextareaAutosize key={`${Math.floor((Math.random() * 1000))}-min`} onChange={handleContentChange} defaultValue={Content} name=\"textarea\" />\n                            <Button\n                                className=\"btn\"\n                                variant=\"primary\"\n                                type=\"submit\"\n                                block>\n                                Save\n                            </Button>\n                        </form>\n                    </Col>\n                </Row>\n\n            </Section>\n        </>\n    );\n};\n\nexport default EditReport;"]},"metadata":{},"sourceType":"module"}