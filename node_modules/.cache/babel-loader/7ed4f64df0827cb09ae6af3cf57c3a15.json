{"ast":null,"code":"export default function validateAuth(values) {\n  let errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required Email';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.name) {\n    errors.name = 'Required Name';\n  } // Password Errors\n\n\n  if (!values.password) {\n    errors.password = 'Required Password';\n  } else if (values.password.length < 6) {\n    errors.password = 'Password must be at least 6 characters';\n  }\n\n  if (!values.year) {\n    errors.year = 'Required Year';\n  } else if (values.year > 2019) {\n    errors.year = 'Year cant be higher than 2019';\n  }\n\n  if (!values.day) {\n    errors.day = 'Required Day';\n  }\n\n  if (!values.month) {\n    errors.month = 'Required month';\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["/home/patrik/School/ramverk2/src/components/views/ValidateAuth.js"],"names":["validateAuth","values","errors","email","test","name","password","length","year","day","month"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AACzC,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB;AACfD,IAAAA,MAAM,CAACC,KAAP,GAAe,gBAAf;AACH,GAFD,MAEO,IACH,CAAC,2CAA2CC,IAA3C,CAAgDH,MAAM,CAACE,KAAvD,CADE,EAC6D;AAChED,IAAAA,MAAM,CAACC,KAAP,GAAe,uBAAf;AACH;;AAED,MAAI,CAACF,MAAM,CAACI,IAAZ,EAAkB;AACdH,IAAAA,MAAM,CAACG,IAAP,GAAc,eAAd;AACH,GAZwC,CAczC;;;AACA,MAAI,CAACJ,MAAM,CAACK,QAAZ,EAAsB;AAClBJ,IAAAA,MAAM,CAACI,QAAP,GAAkB,mBAAlB;AACH,GAFD,MAEO,IAAIL,MAAM,CAACK,QAAP,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AACnCL,IAAAA,MAAM,CAACI,QAAP,GAAkB,wCAAlB;AACH;;AAED,MAAI,CAACL,MAAM,CAACO,IAAZ,EAAkB;AACdN,IAAAA,MAAM,CAACM,IAAP,GAAc,eAAd;AACH,GAFD,MAEO,IAAIP,MAAM,CAACO,IAAP,GAAc,IAAlB,EAAwB;AAC3BN,IAAAA,MAAM,CAACM,IAAP,GAAc,+BAAd;AACH;;AAED,MAAI,CAACP,MAAM,CAACQ,GAAZ,EAAiB;AACbP,IAAAA,MAAM,CAACO,GAAP,GAAa,cAAb;AACH;;AAED,MAAI,CAACR,MAAM,CAACS,KAAZ,EAAmB;AACfR,IAAAA,MAAM,CAACQ,KAAP,GAAe,gBAAf;AACH;;AAED,SAAOR,MAAP;AACH","sourcesContent":["export default function validateAuth(values) {\n    let errors = {};\n\n    if (!values.email) {\n        errors.email = 'Required Email';\n    } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n    }\n\n    if (!values.name) {\n        errors.name = 'Required Name';\n    }\n\n    // Password Errors\n    if (!values.password) {\n        errors.password = 'Required Password';\n    } else if (values.password.length < 6) {\n        errors.password = 'Password must be at least 6 characters';\n    }\n\n    if (!values.year) {\n        errors.year = 'Required Year';\n    } else if (values.year > 2019) {\n        errors.year = 'Year cant be higher than 2019';\n    }\n\n    if (!values.day) {\n        errors.day = 'Required Day';\n    }\n\n    if (!values.month) {\n        errors.month = 'Required month';\n    }\n\n    return errors;\n}"]},"metadata":{},"sourceType":"module"}